spring:
  main:
    allow-bean-definition-overriding: true
  jackson:
    default-property-inclusion: non_null
    property-naming-strategy: SNAKE_CASE
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false # Prevents unknown JSON fields from breaking serialization
#  cloud:
#    openfeign:
##      oauth2:
##        enabled: true
##        clientRegistrationId: cityGuide
#      client:
#        config:
#          google-api:               # annotated by @FeignClient(name = "google-api") in interface GoogleApiClient
#            url: https://routes.googleapis.com/directions/v2:computeRoutes
#            loggerLevel: basic       # clickIn - choices are FULL, HEADER, BASIC, NONE
##            default-request-headers:

  datasource:
    url: jdbc:postgresql://${DATABASE_URL:localhost}:${DATABASE_PORT:5432}/cityguide
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:cityguide123789}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true  # Improves logging & debugging
        jdbc:
          lob.non_contextual_creation: true # Ensured Hibernate supports PostgreSQL JSONB. Prevents errors with JSONB
  sql:
    init:
      mode: ${INIT_DB:always}
      schema-locations: "classpath:database-init.sql"

logging:
  level:
    org.apache.coyote.http11.Http11InputBuffer: TRACE # Incoming HTTP requests
    org.springframework.jdbc.datasource.init: DEBUG # Database initialization
    org.springframework.jdbc.core: DEBUG # SQL